/* Copyright 2019 The TensorFlow Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/
package org.tensorflow.lite.examples.transfer.api

import java.io.Closeable
import java.nio.ByteBuffer
import java.nio.ByteOrder
import java.util.*

internal class LiteInitializeModel(private val modelWrapper: LiteModelWrapper?) : Closeable {

    /**
     * Fills the model parameter buffers with initial values generated by the initializer model.
     *
     * @param modelParameters where to store the model outputs.
     */
    fun initializeParameters(modelParameters: Array<ByteBuffer?>) {
        val zero = ByteBuffer.allocateDirect(FLOAT_BYTES)
        zero.order(ByteOrder.nativeOrder())
        zero.putFloat(0, 0f)
        val outputs: MutableMap<Int, Any?> = TreeMap()
        for (paramIdx in modelParameters.indices) {
            outputs[paramIdx] = modelParameters[paramIdx]
        }
        modelWrapper!!.interpreter.runForMultipleInputsOutputs(arrayOf<Any>(zero), outputs)
        for (buffer in modelParameters) {
            buffer!!.rewind()
        }
    }

    override fun close() {
        modelWrapper!!.close()
    }

    companion object {
        private const val FLOAT_BYTES = 4
    }

}